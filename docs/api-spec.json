{
  "openapi": "3.0.0",
  "info": {
    "title": "Ansaju BE",
    "version": "1.0.0",
    "description": "API documentation untuk Ansaju project, project ini merupakan capstone project dari Coding Camp powered by DBS Foundation yang bertujuan untuk memberikan rekomendasi untuk para siswa yang ingin menentukan jurusan kuliah"
  },
  "servers": [
    {
      "url": "http://localhost:9000/",
      "description": "local server"
    }
  ],
  "tags": [
    {
      "name": "Auth"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Auth"],
        "description": "register user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "John Doe",
                "email": "johndoe@mail.com",
                "username": "johndoe",
                "password": "secretpassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "response error when username or email already exist or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "validation error": {
                    "value": {
                      "error": true,
                      "message": "Invalid request payload: some error validation..."
                    }
                  },
                  "username already exists": {
                    "value": {
                      "error": true,
                      "message": "Username already exists"
                    }
                  },
                  "email already exists": {
                    "value": {
                      "error": true,
                      "message": "Email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "description": "login user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "username": "johndoe",
                "password": "secretpassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "error": true,
                  "message": "success login user",
                  "data": {
                    "name": "John Doe",
                    "email": "johndoe@mail.com",
                    "username": "johndoe",
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                  }
                }
              }
            }
          },
          "400": {
            "description": "response error when validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "true",
                  "message": "Invalid request payload: some error validation..."
                }
              }
            }
          },
          "401": {
            "description": "response error when password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": true,
                  "message": "Invalid username or password"
                }
              }
            }
          }
        }
      }
    },
    "/recommendation": {
      "post": {
        "tags": ["Recommendation"],
        "description": "request untuk mendapatkan rekomendasi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "answer": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "minLength": 12,
                      "maxLength": 12,
                      "allOf": [{ "minimum": 1, "maximum": 5 }]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success mendapatkan rekomendasi",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jurusan": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "response error when validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "true",
                  "message": "Invalid request payload: some error validation..."
                }
              }
            }
          },
          "401": {
            "description": "response error when password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": true,
                  "message": "Unauthorized"
                }
              }
            }
          }
        }
      }
    }
  }
}
